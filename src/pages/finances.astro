---
import Layout from '../layouts/Layout.astro';
import DonutChart from '../components/DonutChart.svelte';
import DrillDownModal from '../components/DrillDownModal.svelte';
import FinanceNavigation from '../components/FinanceNavigation.svelte';
import HorizontalBarChart from '../components/HorizontalBarChart.svelte';
import { aggregateData, type BudgetItem, aggregateByChapitre } from '../utils/budget-data';

// Charger les donn√©es budg√©taires
console.log('üîÑ Finances - Chargement des donn√©es...');

// Essayer d'abord un import direct du fichier
let budgetData: BudgetItem[] = [];
try {
  // Import direct depuis le public folder
  budgetData = await import('../../public/assets/datas/2025/base_budget_2025.json').then(module => module.default as BudgetItem[]);
  console.log('üìä Finances - Import direct r√©ussi:', budgetData?.length, '√©l√©ments');
} catch (importError) {
  console.log('‚ö†Ô∏è Finances - Import direct √©chou√©, essai fetch:', importError);
  
  // Fallback avec fetch
  try {
    const response = await fetch('/assets/datas/2025/base_budget_2025.json');
    console.log('üì° Finances - R√©ponse fetch:', response.status, response.ok);
    budgetData = await response.json();
    console.log('üìä Finances - Fetch r√©ussi:', budgetData?.length, '√©l√©ments');
  } catch (fetchError) {
    console.error('‚ùå Finances - Fetch √©chou√©:', fetchError);
    budgetData = [];
  }
}

console.log('üìà Finances - Donn√©es budg√©taires finales:', budgetData?.length, '√©l√©ments');

// Pr√©parer les donn√©es pour toutes les sections
console.log('üîß Finances - Agr√©gation des donn√©es...');

const fonctionnementDepenses = aggregateData(budgetData, 'FONCTIONNEMENT', 'DEPENSES', 'regroupement_focale_n1');
const fonctionnementRecettes = aggregateData(budgetData, 'FONCTIONNEMENT', 'RECETTES', 'regroupement_focale_n1');
const investissementDepenses = aggregateData(budgetData, 'INVESTISSEMENT', 'DEPENSES', 'regroupement_focale_n1');
const investissementRecettes = aggregateData(budgetData, 'INVESTISSEMENT', 'RECETTES', 'regroupement_focale_n1');

// Pr√©parer les donn√©es pour le bar chart fonctionnement/d√©penses et recettes par chapitre
const fonctionnementDepensesChapitre = aggregateByChapitre(budgetData, 'FONCTIONNEMENT', 'DEPENSES');
const fonctionnementRecettesChapitre = aggregateByChapitre(budgetData, 'FONCTIONNEMENT', 'RECETTES');
const investissementDepensesChapitre = aggregateByChapitre(budgetData, 'INVESTISSEMENT', 'DEPENSES');
const investissementRecettesChapitre = aggregateByChapitre(budgetData, 'INVESTISSEMENT', 'RECETTES');


console.log('üìä Finances - Donn√©es fonctionnement d√©penses:', fonctionnementDepenses?.length, 'groupes');
console.log('üìä Finances - Donn√©es fonctionnement recettes:', fonctionnementRecettes?.length, 'groupes');
console.log('üìä Finances - Donn√©es investissement d√©penses:', investissementDepenses?.length, 'groupes');
console.log('üìä Finances - Donn√©es investissement recettes:', investissementRecettes?.length, 'groupes');

// Donn√©es par d√©faut (fonctionnement d√©penses)
const initialData = fonctionnementDepenses;
---

<Layout title="Finances - MCCP">
  <main class="finances-main">
    <!-- Message d'avertissement pour les petits √©crans -->
    <div class="screen-warning">
      <div class="warning-content">
        <h2>üìä Consultation des Finances</h2>
        <p>Pour une meilleure exp√©rience de consultation des donn√©es financi√®res, nous vous recommandons d'utiliser un ordinateur ou un √©cran plus large.</p>
        <div class="warning-details">
          <p><strong>R√©solution minimale recommand√©e :</strong> 1400px de largeur</p>
          <p>Cette page contient des graphiques d√©taill√©s et des tableaux interactifs qui n√©cessitent plus d'espace d'affichage pour une lecture optimale.</p>
        </div>
        <div class="warning-actions">
          <a href="/" class="btn-home">‚Üê Retour √† l'accueil</a>
        </div>
      </div>
    </div>

    <!-- Contenu principal (masqu√© sur petits √©crans) -->
    <div class="finances-section">
      <div class="finances-layout">
      <!-- Navigation fixe √† gauche -->
      <aside class="finances-sidebar">
        <FinanceNavigation client:load />
      </aside>

      <!-- Contenu principal √† droite -->
      <div class="finances-content">
        <!-- En-t√™te -->
        <header class="finances-header">
          <h1>Finances municipales 2024</h1>
          <div class="download-section">
            <a href="/assets/datas/Budget-primitif-2025-Putanges.pdf" class="download-pdf-btn" download>
              <span class="download-icon">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                  <polyline points="7 10 12 15 17 10"/>
                  <line x1="12" y1="15" x2="12" y2="3"/>
                </svg>
              </span>
              T√©l√©charger le budget au format PDF
            </a>
          </div>
        </header>

                <!-- Section Fonctionnement -->
        <section class="chart-section" id="section-budget-fonctionnement">
          <div class="section-header">
            <h2>Section de fonctionnement 2024</h2>
          </div>
          
          <!-- Onglets Donut Fonctionnement -->
          <div class="tabs-container" id="donut-tabs-fonctionnement">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="fonctionnement-donut">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="fonctionnement-donut">
                Recettes
              </button>
            </div>
          </div>

          <!-- Graphique Fonctionnement (Donut) -->
          <div class="chart-wrapper" id="chart-fonctionnement">
            <DonutChart 
              data={fonctionnementDepenses}
              title="D√©penses - Fonctionnement - R√©alisations 2024"
              chartId="chart-fonctionnement"
              enableDrillDown={true}
              client:load
            />
          </div>
        </section>
        <section class="chart-section" id="section-comparaison-fonctionnement">
          <div class="section-header">
            <h2>Comparaison fonctionnement 2024</h2>
          </div>

          <!-- Onglets BarChart Fonctionnement -->
          <div class="tabs-container" id="bar-tabs-fonctionnement">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="fonctionnement-bar">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="fonctionnement-bar">
                Recettes
              </button>
            </div>
          </div>

          <!-- Bar chart de comparaison par chapitre, interactif avec ses propres onglets -->
          <div class="chart-wrapper" id="bar-fonctionnement">
            <HorizontalBarChart 
              data={fonctionnementDepensesChapitre}
              type="expenses"
              title="Comparaison des d√©penses par chapitre (Pr√©vus, R√©alis√©s, Propositions)"
              client:load
            />
          </div>
        </section>

        <!-- Section Investissement -->
        <section class="chart-section" id="section-budget-investissement">
          <div class="section-header">
            <h2>Budget d'investissement 2024</h2>
          </div>
          
          <!-- Onglets Investissement -->
          <div class="tabs-container">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="investissement">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="investissement">
                Recettes
              </button>
            </div>
          </div>

          <!-- Graphique Investissement -->
          <div class="chart-wrapper" id="chart-investissement">
            <DonutChart 
              data={investissementDepenses}
              title="D√©penses - Investissement - R√©alisations 2024"
              chartId="chart-investissement"
              enableDrillDown={true}
              client:load
            />
          </div>
        </section>
        <section class="chart-section" id="section-comparaison-investissement">
          <div class="section-header">
            <h2>Comparaison investissement 2024</h2>
          </div>

          <!-- Onglets BarChart Fonctionnement -->
          <div class="tabs-container" id="bar-tabs-investissement">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="investissement-bar">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="investissement-bar">
                Recettes
              </button>
            </div>
          </div>

          <!-- Bar chart de comparaison par chapitre, interactif avec ses propres onglets -->
          <div class="chart-wrapper" id="bar-investissement">
            <HorizontalBarChart 
              data={investissementDepensesChapitre}
              type="expenses"
              title="Comparaison des d√©penses par chapitre (Pr√©vus, R√©alis√©s, Propositions)"
              chartId="bar-investissement"
              client:load
            />
          </div>
        </section>

      </div>
    </div>

    <!-- Modal de drill-down -->
    <DrillDownModal 
      budgetData={budgetData}
      client:only="svelte"
    />

    <!-- Script pour g√©rer la navigation et les onglets -->
      <script define:vars={{ fonctionnementDepenses, fonctionnementRecettes, investissementDepenses, investissementRecettes, fonctionnementDepensesChapitre, fonctionnementRecettesChapitre, investissementDepensesChapitre, investissementRecettesChapitre }}>
        document.addEventListener('DOMContentLoaded', () => {
          
          // Donn√©es mapp√©es par navigation
          const dataMap = {
            'depenses-fonctionnement': { data: fonctionnementDepenses, type: 'depenses', section: 'fonctionnement' },
            'recettes-fonctionnement': { data: fonctionnementRecettes, type: 'recettes', section: 'fonctionnement' },
            'depenses-investissement': { data: investissementDepenses, type: 'depenses', section: 'investissement' },
            'recettes-investissement': { data: investissementRecettes, type: 'recettes', section: 'investissement' }
          };

          const tabs = document.querySelectorAll('.tab');
          

          




          function updateChart(data, title, chartId) {
            // Dispatch un √©v√©nement personnalis√© pour mettre √† jour le composant Svelte
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title, chartId }
            });
            document.dispatchEvent(updateEvent);
          }

          // Gestion des onglets par section
          tabs.forEach(tab => {
            tab.addEventListener('click', () => {
              const tabType = tab.dataset.tab;
              const section = tab.dataset.section;

              // Mettre √† jour les styles des onglets de la m√™me section
              const sectionTabs = document.querySelectorAll(`[data-section="${section}"]`);
              sectionTabs.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');

              // D√©terminer les nouvelles donn√©es
              const dataKey = `${tabType}-${section}`;
              const config = dataMap[dataKey];
              
              if (config) {
                const chartId = `chart-${section}`;
                const title = `${tabType === 'depenses' ? 'D√©penses' : 'Recettes'} - ${section === 'fonctionnement' ? 'Fonctionnement' : 'Investissement'} - R√©alisations 2024`;
                updateChart(config.data, title, chartId);
              }
            });
          });

          // === GESTION DU DRILL-DOWN ===
          
          // √âtat de la modal
          let currentModalState = {
            isOpen: false,
            selectedCategory: '',
            section: '',
            type: '',
            valueField: 'REALISATIONS_2024'
          };

          // √âcouter les √©v√©nements de clic sur les segments du donut
          console.log('üéß Finances - Event listener ajout√© pour segmentClick');
          document.addEventListener('segmentClick', (event) => {
            console.log('üéØ Finances - √âv√©nement segmentClick re√ßu:', event.detail);
            
            const { category } = event.detail;
            
            // Nouvelle approche: d√©terminer la section √† partir du donut cliqu√©
            let section = '';
            let type = '';
            
            // V√©rifier quel donut a √©t√© cliqu√© en cherchant dans quelle section se trouve la cat√©gorie
            const isFonctionnementCategory = fonctionnementDepenses.some(item => item.label === category) || 
                                           fonctionnementRecettes.some(item => item.label === category);
            const isInvestissementCategory = investissementDepenses.some(item => item.label === category) || 
                                           investissementRecettes.some(item => item.label === category);
            
            console.log('üîç Finances - D√©tection de la source:', {
              category,
              isFonctionnementCategory,
              isInvestissementCategory
            });
            
            if (isFonctionnementCategory) {
              section = 'FONCTIONNEMENT';
              // D√©terminer le type bas√© sur l'onglet actif de fonctionnement
              const activeFonctionnementTab = document.querySelector('#donut-tabs-fonctionnement .tab-active');
              type = activeFonctionnementTab?.dataset.tab === 'recettes' ? 'RECETTES' : 'DEPENSES';
              console.log('‚úÖ Finances - Section d√©termin√©e: FONCTIONNEMENT, Type:', type);
            } else if (isInvestissementCategory) {
              section = 'INVESTISSEMENT';
              // D√©terminer le type bas√© sur l'onglet actif d'investissement
              const activeInvestissementTab = document.querySelector('#donut-tabs-investissement .tab-active');
              type = activeInvestissementTab?.dataset.tab === 'recettes' ? 'RECETTES' : 'DEPENSES';
              console.log('‚úÖ Finances - Section d√©termin√©e: INVESTISSEMENT, Type:', type);
            } else {
              // Par d√©faut si aucune correspondance
              section = 'FONCTIONNEMENT';
              type = 'DEPENSES';
              console.log('‚ö†Ô∏è Finances - Cat√©gorie non trouv√©e, d√©faut: FONCTIONNEMENT/DEPENSES');
            }

            console.log('üìä Finances - Contexte modal:', { category, section, type });

            // Mettre √† jour l'√©tat de la modal
            currentModalState = {
              isOpen: true,
              selectedCategory: category,
              section,
              type,
              valueField: 'REALISATIONS_2024'
            };

            // Dispatcher l'√©v√©nement pour ouvrir la modal
            const openModalEvent = new CustomEvent('openDrillDownModal', {
              detail: currentModalState
            });
            document.dispatchEvent(openModalEvent);
          });

          // √âcouter la fermeture de la modal
          document.addEventListener('closeDrillDownModal', () => {
            console.log('‚ùå Finances - Fermeture de la modal');
            currentModalState.isOpen = false;
          });

          // Onglets Donut Fonctionnement
          const donutTabs = document.querySelectorAll('#donut-tabs-fonctionnement .tab');
          console.log('üîß Finances - Setup onglets donut fonctionnement:', donutTabs.length);
          
          function updateDonutChart(tabType) {
            console.log('üìä Finances - updateDonutChart appel√© avec:', tabType);
            let data, title;
            if (tabType === 'recettes') {
              data = fonctionnementRecettes;
              title = 'Recettes - Fonctionnement - R√©alisations 2024';
            } else {
              data = fonctionnementDepenses;
              title = 'D√©penses - Fonctionnement - R√©alisations 2024';
            }
            console.log('üì§ Finances - Dispatch updateChart pour donut:', {
              chartId: 'chart-fonctionnement',
              dataLength: data?.length || 0,
              title: title.substring(0, 50) + '...'
            });
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title, chartId: 'chart-fonctionnement' }
            });
            document.dispatchEvent(updateEvent);
          }
          donutTabs.forEach(tab => {
            tab.addEventListener('click', () => {
              console.log('üñ±Ô∏è Finances - Clic sur onglet donut:', tab.dataset.tab);
              donutTabs.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');
              const tabType = tab.dataset.tab;
              updateDonutChart(tabType);
            });
          });
          updateDonutChart('depenses');

          // Onglets BarChart Fonctionnement
          const barTabs = document.querySelectorAll('#bar-tabs-fonctionnement .tab');
          function updateBarChart(tabType) {
            let data, type, title;
            if (tabType === 'recettes') {
              data = fonctionnementRecettesChapitre;
              type = 'revenues';
              title = 'Comparaison des recettes par chapitre (Pr√©vus, R√©alis√©s, Propositions)';
            } else {
              data = fonctionnementDepensesChapitre;
              type = 'expenses';
              title = 'Comparaison des d√©penses par chapitre (Pr√©vus, R√©alis√©s, Propositions)';
            }
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title, chartId: 'bar-fonctionnement', type }
            });
            document.dispatchEvent(updateEvent);
          }
          barTabs.forEach(tab => {
            tab.addEventListener('click', () => {
              barTabs.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');
              const tabType = tab.dataset.tab;
              updateBarChart(tabType);
            });
          });
          updateBarChart('depenses');

          // Onglets BarChart Investissement
          const barTabsInvest = document.querySelectorAll('#bar-tabs-investissement .tab');
          console.log('üîß Finances - Setup onglets investissement:', barTabsInvest.length);
          
          function updateBarChartInvest(tabType) {
            console.log('üìä Finances - updateBarChartInvest appel√© avec:', tabType);
            let data, type, title;
            if (tabType === 'recettes') {
              data = investissementRecettesChapitre;
              type = 'revenues';
              title = 'Comparaison des recettes par chapitre (Pr√©vus, R√©alis√©s, Propositions)';
            } else {
              data = investissementDepensesChapitre;
              type = 'expenses';
              title = 'Comparaison des d√©penses par chapitre (Pr√©vus, R√©alis√©s, Propositions)';
            }
            console.log('üì§ Finances - Dispatch updateChart pour investissement:', {
              chartId: 'bar-investissement',
              type,
              dataLength: data?.length || 0,
              title: title.substring(0, 50) + '...'
            });
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title, chartId: 'bar-investissement', type }
            });
            document.dispatchEvent(updateEvent);
          }
          barTabsInvest.forEach(tab => {
            tab.addEventListener('click', () => {
              console.log('üñ±Ô∏è Finances - Clic sur onglet investissement:', tab.dataset.tab);
              barTabsInvest.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');
              const tabType = tab.dataset.tab;
              updateBarChartInvest(tabType);
            });
          });
          updateBarChartInvest('depenses');

        });
      </script>
    </div>
    </div>
  </main>
</Layout>

<style>
  .finances-main {
    min-height: 100vh;
    background-color: #f9fafb;
    max-width: 1600px;
  }

  .finances-content section{
    margin: 0 auto;
  }

  .finances-layout {
    display: flex;
    gap: 2rem;
    min-height: 100vh;
    max-width: 1600px;
    margin: 0 auto;
    padding: 2rem;
  }

  .finances-sidebar {
    flex-shrink: 0;
  }

  .finances-content {
    flex: 1;
    min-width: 0;
  }

  .finances-header {
    text-align: left;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(46, 139, 87, 0.1);
  }

  .finances-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--secondary);
    margin-bottom: 1rem;
  }

  .finances-header p {
    font-size: 1.1rem;
    color: #6b7280;
    max-width: 600px;
    margin: 0 auto;
  }

  .chart-section {
    border-radius: 1rem;
    padding: 2rem;
    margin-bottom: 2rem;
    scroll-margin-top: 2rem;
  }

  .section-header {
    text-align: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(46, 139, 87, 0.1);
  }

  .section-header h2 {
    font-size: 1.8rem;
    font-weight: 600;
    color: var(--primary);
    margin-bottom: 0.5rem;
  }

  .section-header p {
    font-size: 1rem;
    color: #6b7280;
    margin: 0;
  }

  .tabs-container {
    margin-bottom: 2rem;
  }

  .tabs {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .tab {
    background: none;
    border: none;
    padding: 0.5rem 1.5rem;
    font-size: 1rem;
    font-weight: 600;
    color: #333;
    border-bottom: 2.5px solid transparent;
    cursor: pointer;
    transition: color 0.2s, border-color 0.2s, background-color 0.2s;
    border-radius: 0.25rem 0.25rem 0 0;
  }

  .tab:hover {
    color: #1976d2;
  }

  .tab:focus {
    outline: 2px solid #1976d2;
  }

  .tab-active {
    color: #1976d2 !important;
    border-bottom-color: #1976d2 !important;
    background-color: #f5faff;
  }

  .chart-wrapper {
    min-height: 400px;
  }

  /* Affichage conditionnel bas√© sur la largeur d'√©cran */
  @media (max-width: 1399px) {
    .screen-warning {
      display: flex;
    }
    
    .finances-section {
      display: none;
    }
  }

  /* Styles pour √©crans ‚â• 1400px */
  @media (min-width: 1400px) {
    .screen-warning {
      display: none;
    }
    
    .finances-section {
      display: block;
    }
  }

  /* Responsive pour les grands √©crans */
  @media (min-width: 1400px) and (max-width: 1599px) {
    .finances-layout {
      gap: 1.5rem;
      padding: 1.5rem;
    }
  }

  /* Responsive pour √©crans moyens (seulement pour les grands √©crans) */
  @media (min-width: 1400px) and (max-width: 1600px) {
    .finances-layout {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }

    .finances-sidebar {
      order: 2;
    }

    .finances-content {
      order: 1;
    }

    .finances-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }
  }


  .download-section {
      display: flex;
      justify-content: center;
      margin: -0.5rem 0 2.5rem;
    }

    .download-pdf-btn {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--primary);
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      text-decoration: none;
      font-size: 1rem;
      font-weight: 500;
      transition: all 0.2s ease;
      border: 1px solid var(--primary);
      background: transparent;
    }

    .download-pdf-btn:hover {
      background: var(--primary);
      color: white;
      transform: translateY(-1px);
    }

    .download-icon {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .download-pdf-btn svg {
      width: 20px;
      height: 20px;
      transition: transform 0.2s ease;
    }

    .download-pdf-btn:hover svg {
      transform: translateY(2px);
    }
</style>