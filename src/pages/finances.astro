---
import Layout from '../layouts/Layout.astro';
import DonutChart from '../components/DonutChart.svelte';
import { aggregateData, type BudgetItem } from '../utils/budget-data';

// Charger les donn√©es budg√©taires
console.log('üîÑ Finances - Chargement des donn√©es...');

// Essayer d'abord un import direct du fichier
let budgetData: BudgetItem[] = [];
try {
  // Import direct depuis le public folder
  budgetData = await import('../../public/assets/datas/2025/base_budget_2025.json').then(module => module.default as BudgetItem[]);
  console.log('üìä Finances - Import direct r√©ussi:', budgetData?.length, '√©l√©ments');
} catch (importError) {
  console.log('‚ö†Ô∏è Finances - Import direct √©chou√©, essai fetch:', importError);
  
  // Fallback avec fetch
  try {
    const response = await fetch('/assets/datas/2025/base_budget_2025.json');
    console.log('üì° Finances - R√©ponse fetch:', response.status, response.ok);
    budgetData = await response.json();
    console.log('üìä Finances - Fetch r√©ussi:', budgetData?.length, '√©l√©ments');
  } catch (fetchError) {
    console.error('‚ùå Finances - Fetch √©chou√©:', fetchError);
    budgetData = [];
  }
}

console.log('üìà Finances - Donn√©es budg√©taires finales:', budgetData?.length, '√©l√©ments');

// Pr√©parer les donn√©es pour les deux onglets : D√©penses et Recettes
console.log('üîß Finances - Agr√©gation des donn√©es...');

const depensesData = aggregateData(budgetData, 'FONCTIONNEMENT', 'DEPENSES', 'regroupement_focale_n1');
const recettesData = aggregateData(budgetData, 'FONCTIONNEMENT', 'RECETTES', 'regroupement_focale_n1');

console.log('üìä Finances - Donn√©es d√©penses:', depensesData?.length, 'groupes');
console.log('üìä Finances - Donn√©es recettes:', recettesData?.length, 'groupes');

// Donn√©es par d√©faut (d√©penses)
const initialData = depensesData;
---

<Layout title="Finances - MCCP">
  <main class="finances-main">
    <div class="finances-container">
      <!-- En-t√™te -->
      <header class="finances-header">
        <h1>Finances municipales</h1>
        <p>Visualisation des donn√©es budg√©taires 2025</p>
      </header>

      <!-- Section graphique avec onglets -->
      <section class="chart-section">
        <!-- Onglets -->
        <div class="tabs-container">
          <div class="tabs">
            <button class="tab tab-active" data-tab="depenses">
              üí∞ D√©penses
            </button>
            <button class="tab" data-tab="recettes">
              üíµ Recettes
            </button>
          </div>
        </div>

        <!-- Graphique DonutChart -->
        <div class="chart-wrapper">
          <DonutChart 
            data={initialData}
            title="D√©penses - R√©alisations 2024"
            client:load
          />
        </div>
      </section>

      <!-- Script pour g√©rer les onglets -->
      <script define:vars={{ depensesData, recettesData }}>
        document.addEventListener('DOMContentLoaded', () => {
          console.log('üéõÔ∏è Finances - Initialisation onglets');
          console.log('üìä depensesData:', depensesData);
          console.log('üìä recettesData:', recettesData);

          const tabs = document.querySelectorAll('.tab');
          const chartWrapper = document.querySelector('.chart-wrapper');
          
          let currentData = depensesData;
          let currentTitle = "D√©penses - R√©alisations 2024";

          function updateChart(data, title) {
            console.log('üîÑ Finances - Mise √† jour chart:', { data: data?.length, title });
            
            // Dispatch un √©v√©nement personnalis√© pour mettre √† jour le composant Svelte
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title }
            });
            document.dispatchEvent(updateEvent);
          }

          tabs.forEach(tab => {
            tab.addEventListener('click', () => {
              console.log('üéØ Finances - Clic onglet:', tab.dataset.tab);

              // Mettre √† jour les styles des onglets
              tabs.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');

              // D√©terminer les nouvelles donn√©es
              if (tab.dataset.tab === 'depenses') {
                currentData = depensesData;
                currentTitle = "D√©penses - R√©alisations 2024";
              } else {
                currentData = recettesData;
                currentTitle = "Recettes - R√©alisations 2024";
              }

              // Mettre √† jour le graphique
              updateChart(currentData, currentTitle);
            });
          });
        });
      </script>
    </div>
  </main>
</Layout>

<style>
  .finances-main {
    min-height: 100vh;
    padding: 2rem 0;
    background-color: #f9fafb;
  }

  .finances-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .finances-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .finances-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--secondary);
    margin-bottom: 1rem;
  }

  .finances-header p {
    font-size: 1.1rem;
    color: #6b7280;
    max-width: 600px;
    margin: 0 auto;
  }

  .chart-section {
    background-color: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
  }

  .tabs-container {
    margin-bottom: 2rem;
  }

  .tabs {
    display: flex;
    gap: 0.5rem;
    border-bottom: 2px solid #f1f5f9;
    margin-bottom: 1rem;
  }

  .tab {
    background: none;
    border: none;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    color: #64748b;
    cursor: pointer;
    border-bottom: 3px solid transparent;
    transition: all 0.2s ease;
    position: relative;
  }

  .tab:hover {
    color: var(--primary);
    background-color: #f8fafc;
  }

  .tab-active {
    color: var(--primary) !important;
    border-bottom-color: var(--primary) !important;
    background-color: #f8fafc;
  }

  .chart-wrapper {
    min-height: 400px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .finances-main {
      padding: 1rem 0;
    }

    .finances-header h1 {
      font-size: 2rem;
    }

    .finances-header p {
      font-size: 1rem;
    }

    .chart-section {
      padding: 1.5rem;
    }

    .tabs-container {
      margin-bottom: 1.5rem;
    }

    .tab {
      padding: 0.625rem 1rem;
      font-size: 0.9rem;
    }

    .chart-wrapper {
      min-height: 300px;
    }
  }
</style>