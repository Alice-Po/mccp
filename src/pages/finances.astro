---
import Layout from '../layouts/Layout.astro';
import DonutChart from '../components/DonutChart.svelte';
import FinanceNavigation from '../components/FinanceNavigation.svelte';
import { aggregateData, type BudgetItem } from '../utils/budget-data';

// Charger les donn√©es budg√©taires
console.log('üîÑ Finances - Chargement des donn√©es...');

// Essayer d'abord un import direct du fichier
let budgetData: BudgetItem[] = [];
try {
  // Import direct depuis le public folder
  budgetData = await import('../../public/assets/datas/2025/base_budget_2025.json').then(module => module.default as BudgetItem[]);
  console.log('üìä Finances - Import direct r√©ussi:', budgetData?.length, '√©l√©ments');
} catch (importError) {
  console.log('‚ö†Ô∏è Finances - Import direct √©chou√©, essai fetch:', importError);
  
  // Fallback avec fetch
  try {
    const response = await fetch('/assets/datas/2025/base_budget_2025.json');
    console.log('üì° Finances - R√©ponse fetch:', response.status, response.ok);
    budgetData = await response.json();
    console.log('üìä Finances - Fetch r√©ussi:', budgetData?.length, '√©l√©ments');
  } catch (fetchError) {
    console.error('‚ùå Finances - Fetch √©chou√©:', fetchError);
    budgetData = [];
  }
}

console.log('üìà Finances - Donn√©es budg√©taires finales:', budgetData?.length, '√©l√©ments');

// Pr√©parer les donn√©es pour toutes les sections
console.log('üîß Finances - Agr√©gation des donn√©es...');

const fonctionnementDepenses = aggregateData(budgetData, 'FONCTIONNEMENT', 'DEPENSES', 'regroupement_focale_n1');
const fonctionnementRecettes = aggregateData(budgetData, 'FONCTIONNEMENT', 'RECETTES', 'regroupement_focale_n1');
const investissementDepenses = aggregateData(budgetData, 'INVESTISSEMENT', 'DEPENSES', 'regroupement_focale_n1');
const investissementRecettes = aggregateData(budgetData, 'INVESTISSEMENT', 'RECETTES', 'regroupement_focale_n1');

console.log('üìä Finances - Donn√©es fonctionnement d√©penses:', fonctionnementDepenses?.length, 'groupes');
console.log('üìä Finances - Donn√©es fonctionnement recettes:', fonctionnementRecettes?.length, 'groupes');
console.log('üìä Finances - Donn√©es investissement d√©penses:', investissementDepenses?.length, 'groupes');
console.log('üìä Finances - Donn√©es investissement recettes:', investissementRecettes?.length, 'groupes');

// Donn√©es par d√©faut (fonctionnement d√©penses)
const initialData = fonctionnementDepenses;
---

<Layout title="Finances - MCCP">
  <main class="finances-main">
    <div class="finances-layout">
      <!-- Navigation fixe √† gauche -->
      <aside class="finances-sidebar">
        <FinanceNavigation client:load />
      </aside>

      <!-- Contenu principal √† droite -->
      <div class="finances-content">
        <!-- En-t√™te -->
        <header class="finances-header">
          <h1>Finances municipales 2024</h1>
        </header>

                <!-- Section Fonctionnement -->
        <section class="chart-section" id="section-fonctionnement">
          <div class="section-header">
            <h2>Section de fonctionnement 2024</h2>
          </div>
          
          <!-- Onglets Fonctionnement -->
          <div class="tabs-container">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="fonctionnement">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="fonctionnement">
                Recettes
              </button>
            </div>
          </div>

          <!-- Graphique Fonctionnement -->
          <div class="chart-wrapper" id="chart-fonctionnement">
            <DonutChart 
              data={fonctionnementDepenses}
              title="D√©penses - Fonctionnement - R√©alisations 2024"
              chartId="chart-fonctionnement"
              client:load
            />
          </div>
        </section>

        <!-- Section Investissement -->
        <section class="chart-section" id="section-investissement">
          <div class="section-header">
            <h2>Section d'investissement 2024</h2>
          </div>
          
          <!-- Onglets Investissement -->
          <div class="tabs-container">
            <div class="tabs">
              <button class="tab tab-active" data-tab="depenses" data-section="investissement">
                D√©penses
              </button>
              <button class="tab" data-tab="recettes" data-section="investissement">
                Recettes
              </button>
            </div>
          </div>

          <!-- Graphique Investissement -->
          <div class="chart-wrapper" id="chart-investissement">
            <DonutChart 
              data={investissementDepenses}
              title="D√©penses - Investissement - R√©alisations 2024"
              chartId="chart-investissement"
              client:load
            />
          </div>
        </section>
      </div>
    </div>

    <!-- Script pour g√©rer la navigation et les onglets -->
      <script define:vars={{ fonctionnementDepenses, fonctionnementRecettes, investissementDepenses, investissementRecettes }}>
        document.addEventListener('DOMContentLoaded', () => {
          
          // Donn√©es mapp√©es par navigation
          const dataMap = {
            'depenses-fonctionnement': { data: fonctionnementDepenses, type: 'depenses', section: 'fonctionnement' },
            'recettes-fonctionnement': { data: fonctionnementRecettes, type: 'recettes', section: 'fonctionnement' },
            'depenses-investissement': { data: investissementDepenses, type: 'depenses', section: 'investissement' },
            'recettes-investissement': { data: investissementRecettes, type: 'recettes', section: 'investissement' }
          };

          const tabs = document.querySelectorAll('.tab');
          

          




          function updateChart(data, title, chartId) {
            // Dispatch un √©v√©nement personnalis√© pour mettre √† jour le composant Svelte
            const updateEvent = new CustomEvent('updateChart', {
              detail: { data, title, chartId }
            });
            document.dispatchEvent(updateEvent);
          }

          // Gestion des onglets par section
          tabs.forEach(tab => {
            tab.addEventListener('click', () => {
              const tabType = tab.dataset.tab;
              const section = tab.dataset.section;

              // Mettre √† jour les styles des onglets de la m√™me section
              const sectionTabs = document.querySelectorAll(`[data-section="${section}"]`);
              sectionTabs.forEach(t => t.classList.remove('tab-active'));
              tab.classList.add('tab-active');

              // D√©terminer les nouvelles donn√©es
              const dataKey = `${tabType}-${section}`;
              const config = dataMap[dataKey];
              
              if (config) {
                const chartId = `chart-${section}`;
                const title = `${tabType === 'depenses' ? 'D√©penses' : 'Recettes'} - ${section === 'fonctionnement' ? 'Fonctionnement' : 'Investissement'} - R√©alisations 2024`;
                updateChart(config.data, title, chartId);
              }
            });
          });
        });
      </script>
    </div>
  </main>
</Layout>

<style>
  .finances-main {
    min-height: 100vh;
    background-color: #f9fafb;
    max-width: 1600px;
  }

  .finances-layout {
    display: flex;
    gap: 2rem;
    min-height: 100vh;
    max-width: 1600px;
    margin: 0 auto;
    padding: 2rem;
  }

  .finances-sidebar {
    flex-shrink: 0;
  }

  .finances-content {
    flex: 1;
    min-width: 0;
  }

  .finances-header {
    text-align: left;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(46, 139, 87, 0.1);
  }

  .finances-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--secondary);
    margin-bottom: 1rem;
  }

  .finances-header p {
    font-size: 1.1rem;
    color: #6b7280;
    max-width: 600px;
    margin: 0 auto;
  }

  .chart-section {
    background-color: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
    scroll-margin-top: 2rem;
  }

  .section-header {
    text-align: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(46, 139, 87, 0.1);
  }

  .section-header h2 {
    font-size: 1.8rem;
    font-weight: 600;
    color: var(--primary);
    margin-bottom: 0.5rem;
  }

  .section-header p {
    font-size: 1rem;
    color: #6b7280;
    margin: 0;
  }

  .tabs-container {
    margin-bottom: 2rem;
  }

  .tabs {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .tab {
    background: none;
    border: none;
    padding: 0.5rem 1.5rem;
    font-size: 1rem;
    font-weight: 600;
    color: #333;
    border-bottom: 2.5px solid transparent;
    cursor: pointer;
    transition: color 0.2s, border-color 0.2s, background-color 0.2s;
    border-radius: 0.25rem 0.25rem 0 0;
  }

  .tab:hover {
    color: #1976d2;
  }

  .tab:focus {
    outline: 2px solid #1976d2;
  }

  .tab-active {
    color: #1976d2 !important;
    border-bottom-color: #1976d2 !important;
    background-color: #f5faff;
  }

  .chart-wrapper {
    min-height: 400px;
  }

  /* Responsive */
  @media (max-width: 1400px) {
    .finances-layout {
      gap: 1.5rem;
      padding: 1.5rem;
    }
  }

  @media (max-width: 1200px) {
    .finances-layout {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }

    .finances-sidebar {
      order: 2;
    }

    .finances-content {
      order: 1;
    }

    .finances-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .finances-layout {
      padding: 0.5rem;
    }

    .finances-header h1 {
      font-size: 2rem;
    }

    .finances-header p {
      font-size: 1rem;
    }

    .chart-section {
      padding: 1.5rem;
    }

    .tabs-container {
      margin-bottom: 1.25rem;
    }

    .tabs {
      gap: 0.75rem;
      margin-bottom: 1.25rem;
    }

    .tab {
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
    }

    .chart-wrapper {
      min-height: 300px;
    }
  }
</style>