---
import Layout from '../layouts/Layout.astro';
import Chart from '../components/Chart.astro';
import FinancialTable from '../components/FinancialTable.svelte';
import ChartAccordion from '../components/ChartAccordion.astro';
import BudgetNavigation from '../components/BudgetNavigation.astro';
import { readFileSync } from 'fs';
import BudgetTabs from '../components/BudgetTabs.svelte';
import { generateDrillDownData } from '../utils/drilldown';

interface DetailsOfOperatingExpenses2024 {
  compte: string;
  libelle: string;
  montant_realise: number;
}

interface DetailsOfOperatingIncomes2024 {
  compte: string;
  libelle: string;
  montant_realise: number;
}

// Lecture des donn√©es pour le graphique des d√©penses
const jsonContent = readFileSync('public/assets/datas/details-of-operating-expenses-2024.json', 'utf-8');
const data = JSON.parse(jsonContent);

// Lecture des donn√©es pour le graphique des recettes
const incomesContent = readFileSync('public/assets/datas/details-of-operating-incomes-2024.json', 'utf-8');
const incomesData = JSON.parse(incomesContent);

// Lecture des donn√©es pour le tableau de la section de fonctionnement
const overviewContent = readFileSync('public/assets/datas/overview-of-operating-section-2024.json', 'utf-8');
const overviewData = JSON.parse(overviewContent);

// Lecture des donn√©es pour le tableau d'investissement
const investmentContent = readFileSync('public/assets/datas/overview-of-investment-section-2024.json', 'utf-8');
const investmentData = JSON.parse(investmentContent);

// Lecture des donn√©es pour les graphiques d'investissement
const investmentExpensesContent = readFileSync('public/assets/datas/details-of-investment-expenses-2024.json', 'utf-8');
const investmentExpensesData = JSON.parse(investmentExpensesContent);

const investmentIncomesContent = readFileSync('public/assets/datas/details-of-investment-incomes-2024.json', 'utf-8');
const investmentIncomesData = JSON.parse(investmentIncomesContent);

// Lecture des donn√©es de d√©tail pour le drill-down
const detailExpensesContent = readFileSync('public/assets/datas/details-of-operating-expenses-2024.json', 'utf-8');
const detailExpensesData = JSON.parse(detailExpensesContent);

const detailIncomesContent = readFileSync('public/assets/datas/details-of-operating-incomes-2024.json', 'utf-8');
const detailIncomesData = JSON.parse(detailIncomesContent);

// Utilisation des vraies donn√©es avec les bonnes cl√©s
const depensesData: DetailsOfOperatingExpenses2024[] = data.details_of_operating_expenses_2024;
const recettesData: DetailsOfOperatingIncomes2024[] = incomesData.details_of_operating_incomes_2024;

// Pr√©parer les donn√©es d'investissement group√©es par cat√©gorie (comme pour le fonctionnement)
const investmentExpensesSection = investmentData.sections.find((s: any) => s.type === 'investment_expenses');
const depensesInvestData = investmentExpensesSection?.items.map((item: any) => ({
  label: item.libelle,
  compte: item.compte,
  prevus_2024: item.prevus_2024 || 0,
  realises_2024: item.realises_2024 || 0,
  propositions_2025: item.propositions_2025 || 0,
  color: getColorForCategory(item.libelle, 'expenses')
})) || [];

const investmentRevenuesSection = investmentData.sections.find((s: any) => s.type === 'investment_revenues');
const recettesInvestData = investmentRevenuesSection?.items.map((item: any) => ({
  label: item.libelle,
  compte: item.compte,
  prevus_2024: item.prevus_2024 || 0,
  realises_2024: item.realises_2024 || 0,
  propositions_2025: item.propositions_2025 || 0,
  color: getColorForCategory(item.libelle, 'revenues')
})) || [];

// Donn√©es originales d'investissement pour le drill-down (structure originale)
const depensesInvestDataOriginal = investmentExpensesData.details_of_investment_expenses_2024;
const recettesInvestDataOriginal = investmentIncomesData.details_of_investment_revenues_2024;

// Donn√©es de d√©tail pour le drill-down
const detailExpenses = detailExpensesData.details_of_operating_expenses_2024;
const detailIncomes = detailIncomesData.details_of_operating_incomes_2024;

// Charger les donn√©es overview
const overviewBudgetData = JSON.parse(readFileSync('public/assets/datas/overview-of-operating-section-2024.json', 'utf-8'));

// Mapping des cat√©gories overview vers les donn√©es de d√©tail
const categoryMapping = {
  'CHARGES A CARACTERE GENERAL': 'CHARGES A CARACTERE GENERAL',
  'CHARGES DE PERSONNEL': 'CHARGES DE PERSONNEL',
  'ATTENUATION DE PRODUITS': 'ATTENUATION DE PRODUITS',
  'AUTRES CHARGES DE GESTION COURANTE': 'AUTRES CHARGES DE GESTION COURANTE',
  'CHARGES FINANCIERES': 'CHARGES FINANCIERES',
  'CHARGES SPECIFIQUES': 'CHARGES SPECIFIQUES',
  'DOTATIONS AUX AMORTISSEMENTS ET PROVIS.': 'DOTATIONS AUX AMORTISSEMENTS ET PROVIS.',
  'VIREMENT A LA SECTION D\'INVESTISSEMENT': 'VIREMENT A LA SECTION D\'INVESTISSEMENT',
  'OPER. D\'ORDRE DE TRANSFERT ENTRE SECTIONS': 'OPER. D\'ORDRE DE TRANSFERT ENTRE SECTIONS',
  'PRODUITS DES SERVICES ET DU DOMAINE': 'PRODUITS DES SERVICES ET DU DOMAINE',
  'IMPOTS ET TAXES': 'IMPOTS ET TAXES',
  'FISCALITE LOCALE': 'FISCALITE LOCALE',
  'DOTATIONS ET PARTICIPATIONS': 'DOTATIONS ET PARTICIPATIONS',
  'AUTRES PROD. DE GESTION COURANTE': 'AUTRES PROD. DE GESTION COURANTE',
  'ATTENUATION DE CHARGES': 'ATTENUATION DE CHARGES',
  'PRODUITS FINANCIERS': 'PRODUITS FINANCIERS',
  'PRODUITS EXCEPTIONNELS': 'PRODUITS EXCEPTIONNELS',
  'EXCEDENT REPORTE': 'EXCEDENT REPORTE'
};

const investmentCategoryMapping = {
  "REMBOURSEMENT D'EMPRUNTS ET DETTES": "REMBOURSEMENT D'EMPRUNTS ET DETTES",
  "IMMOBILISATIONS INCORPORELLES": "IMMOBILISATIONS INCORPORELLES",
  "SUBVENTIONS D'EQUIPEMENT VERSEES": "SUBVENTIONS D'EQUIPEMENT VERSEES",
  "IMMOBILISATIONS CORPORELLES": "IMMOBILISATIONS CORPORELLES",
  "IMMOBILISATIONS EN COURS": "IMMOBILISATIONS EN COURS",
  "AUTRES IMMOBILISATIONS FINANCIERES": "AUTRES IMMOBILISATIONS FINANCIERES",
  "OPER. D'ORDRE DE TRANSFERT ENTRE SECTIONS": "OPER. D'ORDRE DE TRANSFERT ENTRE SECTIONS",
  "OPERATIONS PATRIMONIALES": "OPERATIONS PATRIMONIALES",
  "DEFICIT D'INVESTISSEMENT REPORTE": "DEFICIT D'INVESTISSEMENT REPORTE",
  // Recettes
  "APPORTS, DOTATIONS ET RESERVES": "APPORTS, DOTATIONS ET RESERVES",
  "SUBVENTIONS D'EQUIPEMENT": "SUBVENTIONS D'EQUIPEMENT",
  "EMPRUNTS ET DETTES ASSIMILEES": "EMPRUNTS ET DETTES ASSIMILEES",
  "PRODUITS DES CESSIONS": "PRODUITS DES CESSIONS",
  "VIREMENT DE LA SECTION DE FONCTIONNEMENT": "VIREMENT DE LA SECTION DE FONCTIONNEMENT",
  "EXCEDENT ANTERIEUR REPORTE": "EXCEDENT ANTERIEUR REPORTE"
};

// G√©n√©ration factoris√©e des drillDownData
const overviewCategories = Object.keys(categoryMapping);
const drillDownData = generateDrillDownData(
  overviewCategories,
  detailExpenses,
  detailIncomes,
  categoryMapping,
  'expense',
  'income'
);

// DEBUG : afficher les cl√©s de drillDownData
console.log('Cl√©s de drillDownData pass√©es au Donut/BudgetTabs :', Object.keys(drillDownData));

const investmentOverviewCategories = Object.keys(investmentCategoryMapping);
const investmentDrillDownData = generateDrillDownData(
  investmentOverviewCategories,
  depensesInvestDataOriginal,
  recettesInvestDataOriginal,
  investmentCategoryMapping,
  'expense',
  'income'
);

// DEBUG : afficher les cl√©s de investmentDrillDownData
console.log('Cl√©s de investmentDrillDownData :', Object.keys(investmentDrillDownData));

// Fonction pour g√©n√©rer des couleurs coh√©rentes
function getColorForCategory(label: string, type: 'expenses' | 'revenues'): string {
  const colors = {
    expenses: [
      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7',
      '#DDA0DD', '#98D8C8', '#F7DC6F', '#BB8FCE', '#85C1E9'
    ],
    revenues: [
      '#52C41A', '#1890FF', '#722ED1', '#13C2C2', '#FA8C16',
      '#EB2F96', '#A0D911', '#2F54EB', '#FA541C', '#722ED1'
    ]
  };
  
  const colorIndex = label.length % colors[type].length;
  return colors[type][colorIndex];
}

// Pr√©parer les donn√©es pour les d√©penses (multi-p√©riodes)
const expensesSection = overviewBudgetData.sections.find((s: any) => s.type === 'expenses');
const expensesData = expensesSection?.items.map((item: any) => ({
  label: item.libelle,
  compte: item.compte,
  prevus_2024: item.prevus_2024 || 0,
  realises_2024: item.realises_2024 || 0,
  propositions_2025: item.propositions_2025 || 0,
  color: getColorForCategory(item.libelle, 'expenses')
})) || [];

// Pr√©parer les donn√©es pour les recettes (multi-p√©riodes)
const revenuesSection = overviewBudgetData.sections.find((s: any) => s.type === 'revenues');
const revenuesData = revenuesSection?.items.map((item: any) => ({
  label: item.libelle,
  compte: item.compte,
  prevus_2024: item.prevus_2024 || 0,
  realises_2024: item.realises_2024 || 0,
  propositions_2025: item.propositions_2025 || 0,
  color: getColorForCategory(item.libelle, 'revenues')
})) || [];

// Donn√©es de drill-down pour les charges de personnel
const personnelDrillDown = {
  "012": [
    { label: "R√©mun√©rations", value: 430000 },
    { label: "Cotisations sociales", value: 55000 },
    { label: "Autres charges", value: 15000 }
  ]
};

---
<Layout title="Budget 2024 - MCC Putanges-le-Lac">
  <main>
    <!-- Navigation sidebar -->
    <BudgetNavigation />
    
    <!-- Message d'avertissement pour les petits √©crans -->
    <div class="screen-warning">
      <div class="warning-content">
        <h2>üìä Consultation du Budget</h2>
        <p>Pour une meilleure exp√©rience de consultation des donn√©es budg√©taires, nous vous recommandons d'utiliser un ordinateur ou un √©cran plus large.</p>
        <div class="warning-details">
          <p><strong>R√©solution minimale recommand√©e :</strong> 1400px de largeur</p>
          <p>Cette page contient des graphiques d√©taill√©s qui n√©cessitent plus d'espace d'affichage pour une lecture optimale.</p>
        </div>
        <div class="warning-actions">
          <a href="/" class="btn-home">‚Üê Retour √† l'accueil</a>
        </div>
      </div>
    </div>

    <!-- Contenu principal (masqu√© sur petits √©crans) -->
    <section class="budget-section">
      <h1>Budget primitif 2025 pour la Commune de Putanges-le-Lac</h1>
      <div class="download-section">
        <a href="/assets/datas/Budget-primitif-2025-Putanges.pdf" class="download-pdf-btn" download>
          <span class="download-icon">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
              <polyline points="7 10 12 15 17 10"/>
              <line x1="12" y1="15" x2="12" y2="3"/>
            </svg>
          </span>
          T√©l√©charger le budget au format PDF
        </a>
      </div>
      
      <!-- Tableau financier - Section de fonctionnement -->
      <div id="section-fonctionnement" class="budget-anchor">
        <FinancialTable data={overviewData} drillDownData={drillDownData} client:load />
      </div>

     
      
      <!-- Section d√©tails de fonctionnement -->
      <div id="detail-section-fonctionnement" class="budget-anchor">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8">
          <div  id="detail-depenses-fonctionnement" class="bg-white rounded-lg shadow-lg p-6 budget-anchor chart-section">
            <h2 class="text-xl font-semibold mb-4">D√©penses de fonctionnement</h2>
            <BudgetTabs 
              data={expensesData} 
              type="expenses" 
              drillDownData={drillDownData}
              client:load
            />
          </div>
          
          <div id="detail-recettes-fonctionnement" class="bg-white rounded-lg shadow-lg p-6 budget-anchor chart-section">
            <h2 class="text-xl font-semibold mb-4">Recettes de fonctionnement</h2>
            <BudgetTabs 
            data={revenuesData} 
            type="revenues" 
            drillDownData={drillDownData}
            client:load
          />
          </div>
        </div>
        
      </div>

      <!-- Tableau financier - Section d'investissement -->
      <div id="section-investissement" class="budget-anchor">
        <FinancialTable data={investmentData} drillDownData={investmentDrillDownData} client:load />
      </div>

      <!-- Section d√©tails d'investissement -->
      <div id="detail-section-investissement" class="budget-anchor">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8">
          <div id="detail-depenses-investissement" class="bg-white rounded-lg shadow-lg p-6 budget-anchor chart-section">
            <h2 class="text-xl font-semibold mb-4">D√©penses d'investissement</h2>
            <BudgetTabs 
              data={depensesInvestData} 
              type="expenses" 
              drillDownData={investmentDrillDownData}
              client:load
            />
          </div>
          <div id="detail-recettes-investissement" class="bg-white rounded-lg shadow-lg p-6 budget-anchor chart-section">
            <h2 class="text-xl font-semibold mb-4">Recettes d'investissement</h2>
            <BudgetTabs 
              data={recettesInvestData} 
              type="revenues" 
              drillDownData={investmentDrillDownData}
              client:load
            />
          </div>
        </div>
      </div>
    </section>

    
  </main>
</Layout>

<style>
    main {
        width: auto;
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 2rem 0 320px; /* Marge droite restaur√©e + espace pour la sidebar */
    }

    /* Message d'avertissement - masqu√© par d√©faut */
    .screen-warning {
      display: none;
      min-height: 100vh;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .warning-content {
      max-width: 600px;
      text-align: center;
      background: white;
      padding: 3rem;
      border-radius: 1.5rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      border: 2px solid #2e8b57;
    }

    .warning-content h2 {
      color: #2e8b57;
      margin-bottom: 1.5rem;
      font-size: 2rem;
    }

    .warning-content p {
      color: #495057;
      margin-bottom: 1rem;
      line-height: 1.6;
      font-size: 1.1rem;
    }

    .warning-details {
      background: #f8f9fa;
      padding: 1.5rem;
      border-radius: 1rem;
      margin: 2rem 0;
      border-left: 4px solid #2e8b57;
    }

    .warning-details p {
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }

    .btn-home {
      display: inline-block;
      padding: 1rem 2rem;
      background: #2e8b57;
      color: white;
      text-decoration: none;
      border-radius: 0.5rem;
      font-weight: 600;
      transition: all 0.2s ease;
      margin-top: 1rem;
    }

    .btn-home:hover {
      background: #1b5e39;
      transform: translateY(-2px);
    }

    /* Styles pour les ancres de navigation */
    .budget-anchor {
      scroll-margin-top: 100px; /* D√©calage pour √©viter le header */
      position: relative;
    }

    /* Affichage conditionnel bas√© sur la largeur d'√©cran */
    @media (max-width: 1399px) {
      .screen-warning {
        display: flex;
      }
      
      .budget-section {
        display: none;
      }

      main {
        padding: 0 1rem; /* Retour au padding normal sur petits √©crans */
      }
    }

    /* Styles pour √©crans ‚â• 1400px */
    @media (min-width: 1400px) {
      .screen-warning {
        display: none;
      }
      
      .budget-section {
        display: block;
        padding: 2rem 0;
        width: 100%;
      }
    }
    
    h1 {
      text-align: center;
      margin-bottom: 3rem;
      font-size: 2.5rem;
      color: var(--primary);
      font-family: var(--font-main);
      font-weight: 700;
    }

    /* Espacement entre le tableau et le graphique */
    .budget-section > :global(.financial-table-container) {
      margin-bottom: 4rem;
    }

    /* Espacement pour l'accord√©on des graphiques */
    .budget-section > :global(.chart-accordion) {
      margin-bottom: 4rem;
    }

    /* Espacement sp√©cifique pour le dernier √©l√©ment */
    .budget-section > :global(*:last-child) {
      margin-bottom: 2rem;
    }

    /* Ajustement de l'espacement des graphiques dans l'accord√©on */
    :global(.accordion-body .chart-component-container) {
      margin-bottom: 3rem;
    }

    :global(.accordion-body .chart-component-container:last-child) {
      margin-bottom: 0;
    }

    .chart-section {
      scroll-margin-top: 120px;
      position: relative;
      z-index: 1;
    }

    /* Ajustements pour les tr√®s grands √©crans */
    @media (min-width: 1600px) {
      main {
        max-width: 1600px;
        padding: 0 3rem 0 380px; /* Ajustement pour la sidebar plus large */
      }
      
      .budget-section {
        padding: 3rem 0;
      }
    }

    /* Ajustements pour les √©crans moyens */
    @media (min-width: 1400px) and (max-width: 1599px) {
      main {
        padding: 0 2rem 0 340px; /* Ajustement pour la sidebar plus compacte */
      }
    }

    .download-section {
      display: flex;
      justify-content: center;
      margin: -0.5rem 0 2.5rem;
    }

    .download-pdf-btn {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--primary);
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      text-decoration: none;
      font-size: 1rem;
      font-weight: 500;
      transition: all 0.2s ease;
      border: 1px solid var(--primary);
      background: transparent;
    }

    .download-pdf-btn:hover {
      background: var(--primary);
      color: white;
      transform: translateY(-1px);
    }

    .download-icon {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .download-pdf-btn svg {
      width: 20px;
      height: 20px;
      transition: transform 0.2s ease;
    }

    .download-pdf-btn:hover svg {
      transform: translateY(2px);
    }

    @media (max-width: 768px) {
      .download-section {
        margin: -0.25rem 0 2rem;
      }

      .download-pdf-btn {
        font-size: 0.9rem;
        padding: 0.4rem 0.8rem;
      }
      
      .download-pdf-btn svg {
        width: 18px;
        height: 18px;
      }
    }
</style>
