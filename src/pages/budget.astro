---
import Layout from '../layouts/Layout.astro';
import { readFileSync } from 'fs';

interface DetailsOfOperatingExpenses2024 {
  compte: string;
  libelle: string;
  montant_realise: number;
}

interface DonneeAvecCouleur extends DetailsOfOperatingExpenses2024 {
  color: string;
  originalIndex: number;
}

// Lecture du fichier JSON r√©el
const jsonContent = readFileSync('public/assets/datas/details-of-operating-expenses-2024.json', 'utf-8');
const data = JSON.parse(jsonContent);

// Utilisation des vraies donn√©es
const donneesComptables = {
  "details_of_operating_expenses_2024": data.details_of_operating_expenses_2024 as DetailsOfOperatingExpenses2024[]
};

const chartColors = [
  '#2e8b57', // Vert primaire
  '#1b365d', // Bleu marine
  '#ac502b', // Accent
  '#747474', // Gris
  '#e0e0e0', // Gris clair
  '#ff6b6b', // Rouge
  '#9b59b6', // Violet
  '#e67e22', // Orange
  '#34495e', // Bleu gris
  '#16a085', // Turquoise
  '#f39c12', // Jaune orang√©
  '#e74c3c', // Rouge vif
  '#3498db', // Bleu ciel
  '#95a5a6', // Gris moyen
  '#d35400', // Orange fonc√©
  '#8e44ad', // Violet fonc√©
  '#27ae60', // Vert √©meraude
  '#f1c40f', // Jaune
  '#e91e63', // Rose
  '#607d8b'  // Bleu gris fonc√©
];

// Cr√©er un tableau avec les donn√©es et leurs couleurs, puis trier par montant d√©croissant
const dataWithColors: DonneeAvecCouleur[] = donneesComptables.details_of_operating_expenses_2024.map((item: DetailsOfOperatingExpenses2024, index: number) => ({
  ...item,
  color: chartColors[index % chartColors.length], // Utilise modulo pour √©viter de d√©passer le tableau de couleurs
  originalIndex: index
})).sort((a: DonneeAvecCouleur, b: DonneeAvecCouleur) => b.montant_realise - a.montant_realise);

// Extraire les donn√©es tri√©es pour Chart.js
const labels = dataWithColors.map((item: DonneeAvecCouleur) => item.libelle);
const montants = dataWithColors.map((item: DonneeAvecCouleur) => item.montant_realise);
const sortedColors = dataWithColors.map((item: DonneeAvecCouleur) => item.color);

// Calculer le total des d√©penses affich√©es
const totalDepenses = dataWithColors.reduce((total, item) => total + item.montant_realise, 0);
---

<Layout title="Budget 2024 - MCC Putanges-le-Lac">
  <main>
    <!-- Message d'avertissement pour les petits √©crans -->
    <div class="screen-warning">
      <div class="warning-content">
        <h2>üìä Consultation du Budget</h2>
        <p>Pour une meilleure exp√©rience de consultation des donn√©es budg√©taires, nous vous recommandons d'utiliser un ordinateur ou un √©cran plus large.</p>
        <div class="warning-details">
          <p><strong>R√©solution minimale recommand√©e :</strong> 1400px de largeur</p>
          <p>Cette page contient des graphiques d√©taill√©s qui n√©cessitent plus d'espace d'affichage pour une lecture optimale.</p>
        </div>
        <div class="warning-actions">
          <a href="/" class="btn-home">‚Üê Retour √† l'accueil</a>
        </div>
      </div>
    </div>

    <!-- Contenu principal (masqu√© sur petits √©crans) -->
    <section class="budget-section">
      <h1>Budget 2024</h1>
      
      <div class="budget-container">
        <div class="chart-container">
          <canvas id="budgetChart" aria-label="Graphique en camembert du budget 2024"></canvas>
          
        </div>
        
       
        
        <div class="budget-details">
          <h2>D√©tail des d√©penses de fonctionnement 2024</h2>
           <!-- Total des d√©penses en √©vidence -->
        <div class="total-depenses">
          <div class="total-content">
            <span class="total-label">Total des d√©penses de fonctionnement</span>
            <span class="total-amount">{totalDepenses.toLocaleString('fr-FR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} ‚Ç¨</span>
          </div>
        </div>
          <ul class="budget-legend">
            {dataWithColors.map((item, index) => (
              <li>
                <div class="legend-color" style={`background-color: ${item.color}`}></div>
                <div class="legend-label">{item.libelle}</div>
                <div class="legend-value">{item.montant_realise.toLocaleString('fr-FR')} ‚Ç¨</div>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </section>
  </main>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script define:vars={{ labels, montants, sortedColors }}>
    let chartInstance = null;

    // Attendre que le DOM soit charg√©
    window.addEventListener('load', () => {
      try {
        // V√©rifier les donn√©es
        console.log('Labels:', labels);
        console.log('Montants:', montants);
        console.log('Couleurs:', sortedColors);

        const canvas = document.getElementById('budgetChart');
        if (!canvas) {
          console.error('Canvas #budgetChart non trouv√©');
          return;
        }

        const ctx = canvas.getContext('2d');
        if (!ctx) {
          console.error('Contexte 2D du canvas non disponible');
          return;
        }

        // Cr√©er le graphique en camembert
        chartInstance = new Chart(ctx, {
          type: 'pie',
          data: {
            labels: labels,
            datasets: [{
              label: 'Budget R√©alis√© 2024',
              data: montants,
              backgroundColor: sortedColors,
              borderWidth: 2,
              borderColor: '#ffffff',
              hoverBorderWidth: 4,
              hoverBorderColor: '#333333'
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                display: false
              },
              title: {
                display: true,
                text: 'D√©penses de fonctionnement 2024',
                font: {
                  family: 'League Spartan',
                  size: 20,
                  weight: 'bold'
                },
                padding: 20
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.label || '';
                    let value = Number(context.raw) || 0;
                    return `${label}: ${value.toFixed(2)} ‚Ç¨`;
                  }
                }
              }
            }
          }
        });

        // Ajouter les interactions avec la sidebar
        const legendItems = document.querySelectorAll('.budget-legend li');
        legendItems.forEach((item, index) => {
          item.addEventListener('mouseenter', () => {
            // Mettre en √©vidence le segment correspondant
            chartInstance.setActiveElements([{
              datasetIndex: 0,
              index: index
            }]);
            chartInstance.update('none');
            
            // Ajouter une classe CSS pour l'effet visuel sur l'item
            item.classList.add('legend-hover');
          });

          item.addEventListener('mouseleave', () => {
            // Enlever la mise en √©vidence
            chartInstance.setActiveElements([]);
            chartInstance.update('none');
            
            // Enlever la classe CSS
            item.classList.remove('legend-hover');
          });
        });

      } catch (error) {
        console.error('Erreur lors de la cr√©ation du graphique:', error);
      }
    });
  </script>
</Layout>

<style>
    main {
        width: auto;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Message d'avertissement - masqu√© par d√©faut */
    .screen-warning {
      display: none;
      min-height: 100vh;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .warning-content {
      max-width: 600px;
      text-align: center;
      background: white;
      padding: 3rem;
      border-radius: 1.5rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      border: 2px solid #2e8b57;
    }

    .warning-content h2 {
      color: #2e8b57;
      margin-bottom: 1.5rem;
      font-size: 2rem;
    }

    .warning-content p {
      color: #495057;
      margin-bottom: 1rem;
      line-height: 1.6;
      font-size: 1.1rem;
    }

    .warning-details {
      background: #f8f9fa;
      padding: 1.5rem;
      border-radius: 1rem;
      margin: 2rem 0;
      border-left: 4px solid #2e8b57;
    }

    .warning-details p {
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }

    .btn-home {
      display: inline-block;
      padding: 1rem 2rem;
      background: #2e8b57;
      color: white;
      text-decoration: none;
      border-radius: 0.5rem;
      font-weight: 600;
      transition: all 0.2s ease;
      margin-top: 1rem;
    }

    .btn-home:hover {
      background: #1b5e39;
      transform: translateY(-2px);
    }

    /* Affichage conditionnel bas√© sur la largeur d'√©cran */
    @media (max-width: 1399px) {
      .screen-warning {
        display: flex;
      }
      
      .budget-section {
        display: none;
      }
    }

    /* Styles pour √©crans ‚â• 1400px */
    @media (min-width: 1400px) {
      .screen-warning {
        display: none;
      }
      
      .budget-section {
        display: block;
        padding: 2rem 1rem;
        width: 100%;
      }
    }

    .budget-container {
      width: 100%;
      margin: 0;
      padding: 0 2rem;
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: auto auto;
      gap: 3rem;
      align-items: start;
    }
    
    .chart-container {
      background: white;
      padding: 2rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      width: 100%;
      grid-column: 1;
      grid-row: 1;
    }
    
    /* Styles pour le total des d√©penses */
    .total-depenses {
      background: linear-gradient(135deg, #2e8b57 0%, #1b5e39 100%);
      border-radius: 1.5rem;
      padding: 2rem;
      box-shadow: 0 8px 25px rgba(46, 139, 87, 0.3);
      text-align: center;
      grid-column: 1;
      grid-row: 2;
    }
    
    .budget-details {
      background: white;
      padding: 1.5rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      width: 100%;
      grid-column: 2;
      grid-row: 1 / 3;
      display: flex;
      flex-direction: column;
      max-height: calc(100vh - 200px); /* Hauteur maximum raisonnable */
      overflow: hidden;
    }
    
    .budget-legend {
      list-style: none;
      padding: 0;
      margin: 0;
      overflow-y: auto;
      flex: 1;
      /* Scroll discret et styl√© */
      scrollbar-width: thin;
      scrollbar-color: rgba(46, 139, 87, 0.3) transparent;
    }
    
    /* Styles pour le scrollbar sur Webkit (Chrome, Safari) */
    .budget-legend::-webkit-scrollbar {
      width: 6px;
    }
    
    .budget-legend::-webkit-scrollbar-track {
      background: transparent;
    }
    
    .budget-legend::-webkit-scrollbar-thumb {
      background-color: rgba(46, 139, 87, 0.3);
      border-radius: 3px;
      transition: background-color 0.2s ease;
    }
    
    .budget-legend::-webkit-scrollbar-thumb:hover {
      background-color: rgba(46, 139, 87, 0.5);
    }
    
    .budget-legend li {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
      padding: 0.75rem;
      border-radius: 0.4rem;
      background: #f8f9fa;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .budget-legend li:hover,
    .budget-legend li.legend-hover {
      background: #e9ecef;
      transform: translateX(3px);
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    }
    
    .legend-color {
      width: 18px;
      height: 18px;
      border-radius: 50%;
      margin-right: 1rem;
      transition: transform 0.2s ease;
      flex-shrink: 0;
    }
    
    .budget-legend li:hover .legend-color,
    .budget-legend li.legend-hover .legend-color {
      transform: scale(1.15);
    }
    
    .legend-label {
      flex: 1;
      font-weight: 500;
      color: #495057;
      font-size: 0.9rem;
      margin-right: 0.75rem;
      line-height: 1.3;
    }
    
    .legend-value {
      font-weight: 600;
      color: #2e8b57;
      font-size: 0.95rem;
      text-align: right;
      min-width: 110px;
    }
    
    h1 {
      text-align: center;
      margin-bottom: 3rem;
      font-size: 2.5rem;
    }
    
    .total-content {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .total-label {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.1rem;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .total-amount {
      color: white;
      font-size: 2.5rem;
      font-weight: 700;
      font-family: 'League Spartan', sans-serif;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    h2 {
      margin-bottom: 1.5rem;
      font-size: 1.3rem;
      flex-shrink: 0; /* Emp√™che la compression */
    }
    
    /* Styles pour le total des d√©penses dans la sidebar - maintenant fixe en haut */
    .budget-details .total-depenses {
      background: linear-gradient(135deg, #2e8b57 0%, #1b5e39 100%);
      border-radius: 0.75rem;
      padding: 1rem;
      box-shadow: 0 4px 15px rgba(46, 139, 87, 0.2);
      text-align: center;
      margin-bottom: 1rem;
      flex-shrink: 0; /* Emp√™che la compression */
    }
    
    .budget-details .total-label {
      color: rgba(255, 255, 255, 0.9);
      font-size: 0.75rem;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.3px;
      margin-bottom: 0.25rem;
    }
    
    .budget-details .total-amount {
      color: white;
      font-size: 1.4rem;
      font-weight: 700;
      font-family: 'League Spartan', sans-serif;
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    }
</style>
